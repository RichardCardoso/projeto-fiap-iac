name: "Terraform Apply"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  TF_CLOUD_ORGANIZATION: "projeto-fiap-64"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "projeto-fiap-iac-infra"
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    if: github.repository != 'hashicorp-education/learn-terraform-github-actions'
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

  deploy-app:
    needs: terraform
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: 'us-east-1'
      CLUSTER_NAME: 'projeto-fiap'
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Setup Kubectl CLI
      run:  |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client

    - name: Setup Kubeconfig
      run:  |
            aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $CLUSTER_NAME

    - name: Deploy to kubernetes cluster
      run:  |
            kubectl apply -f ./kubernetes

    - name: Wait for External Hostname
      id: wait-for-external-hostname
      run: |
        SERVICE_NAME="lb-app-projetofiap"
        NAMESPACE="default"

        # Timeout after 10 minutes
        end=$((SECONDS+600))

        while true; do
            HOSTNAME=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o=jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [[ ! -z $HOSTNAME ]]; then
                echo "External hostname assigned: $HOSTNAME"
                echo "EXTERNAL_HOSTNAME=$HOSTNAME" >> $GITHUB_ENV
                break
            fi
            if [[ $SECONDS -ge $end ]]; then
                echo "Timed out waiting for External hostname assignment."
                exit 1
            fi
            echo "Waiting for External hostname..."
            sleep 10
        done
    - name: Update readme.md
      id: update-readme
      uses: theboi/github-update-readme@v1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        subhead: "Endere√ßo para acesso: ${{ env.EXTERNAL_HOSTNAME }}/swagger-ui/index.html#/"
